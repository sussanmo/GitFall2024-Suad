a. I have done a total of 3 commits, as listed below: 
git log  
commit 550860ac55c3814ea5296e514418c5ad8e69b22c (HEAD -> 
main, feature1)
Author: Suad Mohamed <suad.mohamedh@gmail.com>
Date:   Mon Sep 16 14:41:27 2024 -0500

    Update inpriation.txt to 5 additional inspirational 
quotes.

commit 4ed3440da13462d7f9dc4e26ee47d9fe7c9a46b3
Author: Suad Mohamed <suad.mohamedh@gmail.com>
Date:   Mon Sep 16 14:38:23 2024 -0500

    Add new file inspiration.txt to repo

commit cf6a53ebe8812fbeb9652eb3cae344a6111c3793 (origin/main, 
origin/HEAD)
Author: Suad Mohamed <suad.mohamedh@gmail.com>
Date:   Mon Sep 16 14:24:08 2024 -0500

    Updates repository with modified README.md and a new file 
book.txt and .gitignore file that excludes properties.txt

b. .gitignore was modified in the first commit on Mon Sept 16, 
2:42 pm 

c. the git log with additional parameters such as git log 
--oneline -5 --author cbeams --before "Fri Mar 26 2009"

d. In order to look at the commit history within a specific folder or 
directory, we can use the git log command with an additional parameter 
outline the folder. For the src code file we can use git log -- src or git 
log --oneline -- src/

e. There is no REMOVE.txt file 

f. Git log shows all the commit history and commit messages in a given 
repo across al branches, where as git status shows the current branch we 
are in and the changes that have yet to be committed. 

g. Git shortlog lists the commit messages and the number of commits from 
all the authors in a given repo. 

h. In order to get the commit history for a given file, we would use git 
log but with an additional parameter specifying the file. For Main.java, 
we'd use the comman git log --Main.java as shown below we can see every 
commit and message detailing a modification on the main.java file: 
suadhm@Sumos-MacBook-Pro GitFall2024-Suad % git log -- Main.java
commit b3e573c8b75940e9bbcda519b0bece046f4b60eb
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Tue Sep 10 10:06:47 2024 -0500

    added another name

commit ea123f795a7a0cfc8de45c824e9b7cf17985d355
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Tue Sep 10 10:06:30 2024 -0500

    added another name

commit 985e63e6d4226c156c56c38d061e57e1672dd90b
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Tue Sep 10 09:59:08 2024 -0500

    Added more names

commit 21ea409f47aa292619b8dea918c0c3eb02f82ccc
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Tue Sep 10 09:56:24 2024 -0500

    Added names LinkedList

commit b02c65d884b0a0f344a482cbb0366139b7bcd969
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Tue Sep 10 09:49:33 2024 -0500

    added empty Main.java


i. In order to list commits in Main.java, we can use the git log with the 
addtional parameters -p --follow Main.java. The p stands for patch which 
notes the diff and follow specifies the current history of the file. git 
log -p --follow Main.java  

j. In order to search for words in a commit message we can use the --grep 
parameter in addition to the git log command. To find account we can use 
git log --grep="account"
Source: -grep=<pattern>
Limit the commits output to ones with a log message that matches the 
specified pattern (regular expression). With more than one 
--grep=<pattern>, commits whose message matches any of the given patterns 
are chosen (but see --all-match).

k. Similar to finding a commit message, we can use the git log command but 
with an additional parameter titled --author. To find commits made by Dr. 
Rodriguez, we can do git log --author="Esteban Parra"

l. In addition to the git log --author command, we need to use --since and 
--after parameters to find specific commits in a given period of time. To 
see see the commits made by “Lauren” between 01/05/2014 and 01/14/2024 we 
can use the git log --author="Lauren" --sine="01/05/2014" 
--after="01/14/2024"


 
